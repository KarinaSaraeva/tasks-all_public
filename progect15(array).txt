#include <stdio.h> 
#include <math.h> 
#include <conio.h> 
#define allocate_size 10
int A[allocate_size];
int i;
int *pArr;
	void output_array(int Arr[], int N) {
		for (i = 0, pArr = Arr; i < N; ++i)
			printf("%3d", *(pArr + i));
		printf("\n");
	} ///how to create alternating output
	
	int input_array(int Arr[], int max_size) {

		int top = 0;
		while (true) {
			int  x;
			pArr = Arr;
			scanf_s("%d", &x);
			if (x == 0 || top == max_size) break;
				*(pArr+top) = x;
				top ++;
		}
		return top;
	}
	void MAXIMUM(int Arr[],int N) {
		int *pmax;
		int  j;
		for (i=0, j = 0, pmax = Arr; i <( N-1) ; ++i) {
			if (*(pmax + i - j) >= *pmax) {
				pmax += (i - j); j = i;
			}
		
		}
		printf("max_value=%d",*(pmax));
		printf("\n");
	}
	void MINIMUM(int Arr[], int N) {
		int *pmin;
		for (i = 0, pmin = Arr, pArr =Arr; i < (N - 1); ++i) {
			if (*(pmin) >= *(pArr+i)) {
				pmin = pArr+i;
			}

		}
		printf("min_value=%d", *(pmin));
		printf("\n");
	}
	double MEAN(int Arr[], int N) {
		int Sum = 0;
		double mean_value;
		for (i = 0, pArr = Arr; i < N; ++i)
			Sum +=  *(pArr + i);
		return mean_value = (double)Sum / N;
		printf("mean_value=%lf", mean_value);
	}
	void standard_deviation(int Arr[], int N) {
		double sum_of_deviations = 0;
		for (i = 0, pArr = Arr; i < N; ++i)
			sum_of_deviations += (*(pArr + i)-MEAN(A,N))*(*(pArr + i) - MEAN(Arr, N));
		printf("standard_deviation=%lf", sqrt((sum_of_deviations) / N));
	}
	int main(){
		printf("enter data\n");
		int N=input_array (A, allocate_size);
		output_array(A, N);
		MAXIMUM(A, N);
		MINIMUM(A, N);
		MEAN(A, N);
		standard_deviation(A,N);
	_getch();

	return 0;
}